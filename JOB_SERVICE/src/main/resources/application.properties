#spring.application.name=job-service

server.port=8081
#spring.datasource.url=jdbc:h2:mem:test
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update
#spring.h2.console.enabled=true


#PostgreSql

spring.datasource.url=jdbc:postgresql://localhost:5432/micro
spring.datasource.username=postgres
spring.datasource.password=Harish@123
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

#Eureka
# all the below properties are taken by default, but it is a good to define these properties here
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

#Zipkin

management.tracing.sampling.probability=0.9
# Set the base URL for the Zipkin server using localhost
#management.zipkin.tracing.endpoint=http://localhost:9410


# Config server

# if not available give optional below, so it will fetch from local if config is not available
#so even if the config server is down it will fetch from local project properties file

spring.config.import=optional:configserver:http://localhost:8084

#give the profile which you want to active

#spring.profiles.active=dev

# Actuator
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

# Actuator CircuitBreaker
management.health.circuitbreakers.enabled=true

# Resilience4j
resilience4j.circuitbreaker.instances.companyBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.companyBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.companyBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.companyBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.companyBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.companyBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.companyBreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.companyBreaker.sliding-window-type=count_based


# Retry
resilience4j.retry.instances.companyBreaker.max-attempts=5
resilience4j.retry.instances.companyBreaker.wait-duration=2s

# Rate Limiter
resilience4j.ratelimiter.instances.companyBreaker.timeout-duration=0s
resilience4j.ratelimiter.instances.companyBreaker.limit-refresh-period=4s
resilience4j.ratelimiter.instances.companyBreaker.limit-for-period=2

